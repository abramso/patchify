--- a/cloudify_premium/ha/database.py
+++ b/cloudify_premium/ha/database.py
@@ -328,11 +328,13 @@ class _ReplicationConfig(object):
         self._node_num = None

     def standby_clone(self, master_ip, master_port=DB_PORT, retries=20,
-                      retry_interval=1):
+                      retry_interval=1, data_dir=None):
         logger.debug('cloning from {0}'.format(master_ip))
         if self.is_already_following(master_ip):
             logger.debug('Already following {0}'.format(master_ip))
             return
+        if data_dir is None:
+            data_dir = self._db.data_dir
         credentials = cluster_status.replication_credentials
         wait_for_postgres(cluster_status.master)

@@ -355,7 +357,7 @@ class _ReplicationConfig(object):
                     sudo.run([
                         'standby_clone',
                         '--connstring', connstring,
-                        '--data-dir', self._db.data_dir,
+                        '--data-dir', data_dir,
                         '--owner', self._db._owner
                     ])
                 except subprocess.CalledProcessError:
@@ -468,9 +470,7 @@ class _ReplicationConfig(object):
             raise RuntimeError('Following {0} failed'.format(master_ip))

     def _rejoin_cluster(self, new_master, master_ip, master_port):
-        logger.debug('Rejoining cluster! Deleting old db...')
-        sudo.run(['recreate_db_directory', '--data-dir', self._db.data_dir,
-                  '--owner', self._db._owner])
+        logger.debug('Rejoining cluster!')
         new_db = Database(data_dir=self._db.data_dir)
         new_db.replication.standby_clone(master_ip, master_port=master_port)
         logger.debug('DB cloned successfully')

--- resource_manager.py.before	2018-10-21 18:47:31.901754242 +0300
+++ resource_manager.py.after	2018-10-21 19:11:15.286658890 +0300
@@ -393,7 +393,8 @@
                 deployment_id=deployment_id)
             node_instances = self.sm.list(
                 models.NodeInstance,
-                filters=deplyment_id_filter
+                filters=deplyment_id_filter,
+                get_all_results=True
             )
             # validate either all nodes for this deployment are still
             # uninitialized or have been deleted
@@ -836,10 +837,12 @@
                     .format(active_modifications))
 
         nodes = [node.to_dict() for node
-                 in self.sm.list(models.Node, filters=deployment_id_filter)]
+                 in self.sm.list(models.Node, filters=deployment_id_filter,
+                                 get_all_results=True)]
         node_instances = [instance.to_dict() for instance
                           in self.sm.list(models.NodeInstance,
-                          filters=deployment_id_filter)]
+                          filters=deployment_id_filter,
+                          get_all_results=True)]
         node_instances_modification = tasks.modify_deployment(
             nodes=nodes,
             previous_nodes=nodes,
@@ -849,7 +852,9 @@
 
         node_instances_modification['before_modification'] = [
             instance.to_dict() for instance in
-            self.sm.list(models.NodeInstance, filters=deployment_id_filter)]
+            self.sm.list(models.NodeInstance,
+                         filters=deployment_id_filter,
+                         get_all_results=True)]
 
         now = utils.get_formatted_timestamp()
         modification_id = str(uuid.uuid4())
@@ -990,7 +995,8 @@
             deployment_id=modification.deployment_id)
         node_instances = self.sm.list(
             models.NodeInstance,
-            filters=deployment_id_filter
+            filters=deployment_id_filter,
+            get_all_results=True
         )
         modified_instances = deepcopy(modification.node_instances)
         modified_instances['before_rollback'] = [
@@ -1003,7 +1009,8 @@
             node.id: node for node in self.sm.list(
                 models.Node,
                 filters=deployment_id_filter,
-                include=['id', 'number_of_instances'])
+                include=['id', 'number_of_instances'],
+                get_all_results=True)
         }
 
         scaling_groups = deepcopy(deployment.scaling_groups)

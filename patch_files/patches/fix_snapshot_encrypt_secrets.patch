--- before.py	2018-09-13 15:35:54.479489920 +0300
+++ after.py	2018-09-13 15:36:07.731658932 +0300
@@ -378,8 +378,15 @@
     def encrypt_values(self, encryption_key, table_name, column_name):
         """Encrypt the values of one column in a table
         """
-        values = self.run_query("SELECT id, {0} FROM {1}".format(column_name,
-                                                                 table_name))
+        # try to work with _storage_id, if does not exists, try with id
+        key = '_storage_id'
+        values = self.run_query("SELECT {0}, {1} FROM {2}".format(
+            key, column_name, table_name))
+        if values['all'] is None:
+            key = 'id'
+            values = self.run_query("SELECT {0}, {1} FROM {2}".format(
+                key, column_name, table_name))
+
         # There is no relevant data in the snapshot
         if len(values['all']) < 1:
             return
@@ -390,11 +397,11 @@
             encrypted_value = fernet.encrypt(bytes(value[1]))
             encrypted_values.append((value[0], encrypted_value))
 
-        update_query = """UPDATE {0}
-                          SET {1} = encrypted_values.value
-                          FROM (VALUES %s) AS encrypted_values (id, value)
-                          WHERE {0}.id = encrypted_values.id""" \
-            .format(table_name, column_name)
+        update_query = """
+UPDATE {0}
+SET {1} = encrypted_values.value
+FROM (VALUES %s) AS encrypted_values ({2}, value)
+WHERE {0}.{2} = encrypted_values.{2}""".format(table_name, column_name, key)
         self.run_query(update_query, vars=encrypted_values, bulk_query=True)
 
     def _connect(self):
